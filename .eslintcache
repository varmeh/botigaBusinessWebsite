[{"/Users/varunmehta/Projects/botiga/botigaWebapp/src/index.js":"1","/Users/varunmehta/Projects/botiga/botigaWebapp/src/App.js":"2","/Users/varunmehta/Projects/botiga/botigaWebapp/src/reportWebVitals.js":"3","/Users/varunmehta/Projects/botiga/botigaWebapp/src/pages/Home.js":"4","/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/header/header.js":"5","/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/body/body.js":"6","/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/footer/footer.js":"7","/Users/varunmehta/Projects/botiga/botigaWebapp/src/config.js":"8","/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/download-app-btn/downloadAppBtn.js":"9","/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/contact/contact.js":"10"},{"size":500,"mtime":1608551582675,"results":"11","hashOfConfig":"12"},{"size":446,"mtime":1608551582651,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1608551582676,"results":"14","hashOfConfig":"12"},{"size":343,"mtime":1608551582675,"results":"15","hashOfConfig":"12"},{"size":1308,"mtime":1609851137913,"results":"16","hashOfConfig":"12"},{"size":3129,"mtime":1609852033657,"results":"17","hashOfConfig":"12"},{"size":798,"mtime":1609851137912,"results":"18","hashOfConfig":"12"},{"size":664,"mtime":1609851137913,"results":"19","hashOfConfig":"12"},{"size":989,"mtime":1609851137911,"results":"20","hashOfConfig":"12"},{"size":4738,"mtime":1609851137911,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"w6ce6m",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"/Users/varunmehta/Projects/botiga/botigaWebapp/src/index.js",[],["44","45"],"/Users/varunmehta/Projects/botiga/botigaWebapp/src/App.js",[],"/Users/varunmehta/Projects/botiga/botigaWebapp/src/reportWebVitals.js",[],"/Users/varunmehta/Projects/botiga/botigaWebapp/src/pages/Home.js",[],"/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/header/header.js",[],"/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/body/body.js",[],"/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/footer/footer.js",[],"/Users/varunmehta/Projects/botiga/botigaWebapp/src/config.js",[],"/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/download-app-btn/downloadAppBtn.js",[],"/Users/varunmehta/Projects/botiga/botigaWebapp/src/components/contact/contact.js",["46","47","48","49"],"import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport './contact.css'\nimport { config } from '../../config';\nimport closeImg from \"../../assets/resource/close.svg\";\n\nexport function Contact() {\n\tconst [name, setName] = useState('')\n\tconst [contact, setContact] = useState('')\n\tconst [msg, setMsg] = useState('')\n\n\tconst [isLoading, setIsLoading] = useState(false)\n\tconst [isError, setIsError] = useState(false)\n\tconst [showSuccess, setShowSuccess] = useState(false)\n\tconst [errMsg, seterrMsg] = useState('')\n\n\tconst { pageName = '' } = useParams()\n\tconst openContactUs = React.createRef()\n\n\tuseEffect(() => {\n\t\tif (openContactUs && openContactUs.current) {\n\t\t\tif (pageName === 'contact') {\n\t\t\t\topenContactUs.current.click()\n\t\t\t}\n\t\t}\n\t}, [])\n\n\tfunction sendEmail() {\n\t\tsetIsLoading(true)\n\t\tsetIsError(false)\n\t\tseterrMsg('')\n\t\tif (name.trim() === '' || msg.trim() === '' || contact.trim() === '') {\n\t\t\tsetIsError(true)\n\t\t\tseterrMsg('Please enter details to contact !')\n\t\t\tsetIsLoading(false)\n\t\t\treturn null\n\t\t}\n\t\tvar data = {\n\t\t\tservice_id: config.email.serviceId,\n\t\t\ttemplate_id: config.email.templateId,\n\t\t\tuser_id: config.email.userId,\n\t\t\ttemplate_params: {\n\t\t\t\tfrom_name: name,\n\t\t\t\tto_name: config.email.toName,\n\t\t\t\tmessage: `${msg}, ${contact}`\n\t\t\t}\n\t\t}\n\t\tfetch(config.email.url, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\tAccept: '*',\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t}).then(\n\t\t\t_ => {\n\t\t\t\tsetIsLoading(false)\n\t\t\t\tsetIsError(false)\n\t\t\t\tsetShowSuccess(true)\n\t\t\t},\n\t\t\t_ => {\n\t\t\t\tseterrMsg('some error occured !')\n\t\t\t\tsetIsLoading(false)\n\t\t\t\tsetIsError(true)\n\t\t\t}\n\t\t)\n\t}\n\n\tfunction onClose() {\n\t\tsetName('')\n\t\tsetContact('')\n\t\tsetMsg('')\n\t\tsetIsLoading(false)\n\t\tsetIsError(false)\n\t\tsetShowSuccess(false)\n\t\tseterrMsg('')\n\t}\n\n\tfunction getSuccessContent() {\n\t\treturn (\n\t\t\t<div className='modal-content'>\n\t\t\t\t<div className='modal-header'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tid='closeBtn'\n\t\t\t\t\t\tclassName='close'\n\t\t\t\t\t\tdata-dismiss='modal'>\n\t\t\t\t\t\t<img src={closeImg}/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='modal-body'>\n\t\t\t\t\t<div className='row contactus-success'>\n\t\t\t\t\t\tThank you for your interest\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='col-sm-12 contactus-body-success'>\n\t\t\t\t\t\t\t<p>Our customer care team will reach out to you soon.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tfunction getContactForm() {\n\t\treturn (\n\t\t\t<div className='modal-content'>\n\t\t\t\t<div className='modal-header'>\n\t\t\t\t\t{isError && <label className='error-label'>{errMsg}</label>}\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={onClose}\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tid='closeBtn'\n\t\t\t\t\t\tclassName='close'\n\t\t\t\t\t\tdata-dismiss='modal'>\n\t\t\t\t\t\t<img src={closeImg}/>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<div className='modal-body'>\n\t\t\t\t\t<div className='form-group contactus-head'>Contact Us</div>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<div className='form-group col-sm-6'>\n\t\t\t\t\t\t\t<label htmlFor='name' className='input-label'>\n\t\t\t\t\t\t\t\tFull Name\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tname='name'\n\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\tplaceholder=''\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='form-group col-sm-6'>\n\t\t\t\t\t\t\t<label htmlFor='number' className='input-label'>\n\t\t\t\t\t\t\t\tContact number\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tvalue={contact}\n\t\t\t\t\t\t\t\tonChange={e => setContact(e.target.value)}\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tname='number'\n\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\tplaceholder=''\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='form-group col-sm-12'>\n\t\t\t\t\t\t\t<label htmlFor='message' className='input-label'>\n\t\t\t\t\t\t\t\tMessage\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\tvalue={msg}\n\t\t\t\t\t\t\t\tonChange={e => setMsg(e.target.value)}\n\t\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\t\ttype='message'\n\t\t\t\t\t\t\t\tname='message'\n\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\tplaceholder=''\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\tonClick={sendEmail}\n\t\t\t\t\t\t\tclassName='btn btns send-msg-btn'>\n\t\t\t\t\t\t\t{isLoading && (\n\t\t\t\t\t\t\t\t<div className='spinner-border spinner-border-sm'></div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tSend Message\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<a\n\t\t\t\trole='button'\n\t\t\t\tref={openContactUs}\n\t\t\t\tdata-toggle='modal'\n\t\t\t\tdata-target='#myContactModal'>\n\t\t\t\tCONTACT US\n\t\t\t</a>\n\t\t\t<div\n\t\t\t\tclassName='modal'\n\t\t\t\tid='myContactModal'\n\t\t\t\tdata-backdrop='static'\n\t\t\t\tdata-keyboard='false'>\n\t\t\t\t<div className='modal-dialog modal-lg'>\n\t\t\t\t\t{showSuccess ? getSuccessContent() : getContactForm()}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t)\n}\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":26,"column":5,"nodeType":"56","endLine":26,"endColumn":7,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":89,"column":7,"nodeType":"60","endLine":89,"endColumn":28},{"ruleId":"58","severity":1,"message":"59","line":117,"column":7,"nodeType":"60","endLine":117,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":182,"column":4,"nodeType":"60","endLine":186,"endColumn":35},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'openContactUs' and 'pageName'. Either include them or remove the dependency array.","ArrayExpression",["65"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [openContactUs, pageName]",{"range":"68","text":"69"},[786,788],"[openContactUs, pageName]"]